// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todo.Insfrastructure.Context;

#nullable disable

namespace Todo.Insfrastructure.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Todo.Domain.Entities.TodoCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TodoCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 685, DateTimeKind.Local).AddTicks(6975),
                            Description = "Work related tasks",
                            Title = "Work",
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6007)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6531),
                            Description = "Personal tasks",
                            Title = "Personal",
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6534)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6537),
                            Description = "Shopping tasks",
                            Title = "Shopping",
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6538)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6540),
                            Description = "Health related tasks",
                            Title = "Health",
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6541)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6543),
                            Description = "Fitness related tasks",
                            Title = "Fitness",
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 687, DateTimeKind.Local).AddTicks(6543)
                        });
                });

            modelBuilder.Entity("Todo.Domain.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TodoCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TodoCategoryId");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1132),
                            DueDate = new DateTime(2025, 7, 24, 15, 17, 57, 697, DateTimeKind.Local).AddTicks(9643),
                            IsDone = false,
                            Note = "This is the first todo",
                            Title = "First Todo",
                            TodoCategoryId = 1,
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1506)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1881),
                            DueDate = new DateTime(2025, 7, 25, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1869),
                            IsDone = false,
                            Note = "This is the second todo",
                            Title = "Second Todo",
                            TodoCategoryId = 2,
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1882)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1886),
                            DueDate = new DateTime(2025, 7, 26, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1884),
                            IsDone = false,
                            Note = "This is the third todo",
                            Title = "Third Todo",
                            TodoCategoryId = 3,
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1887)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1890),
                            DueDate = new DateTime(2025, 7, 27, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1889),
                            IsDone = false,
                            Note = "This is the fourth todo",
                            Title = "Fourth Todo",
                            TodoCategoryId = 4,
                            UpdateDate = new DateTime(2025, 7, 23, 15, 17, 57, 698, DateTimeKind.Local).AddTicks(1891)
                        });
                });

            modelBuilder.Entity("Todo.Domain.Entities.TodoItem", b =>
                {
                    b.HasOne("Todo.Domain.Entities.TodoCategory", "Category")
                        .WithMany("TodoItems")
                        .HasForeignKey("TodoCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Todo.Domain.Entities.TodoCategory", b =>
                {
                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
